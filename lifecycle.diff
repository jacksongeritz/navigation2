diff --git a/nav2_lifecycle_manager/CMakeLists.txt b/nav2_lifecycle_manager/CMakeLists.txt
index e0980df7..cb1261cc 100644
--- a/nav2_lifecycle_manager/CMakeLists.txt
+++ b/nav2_lifecycle_manager/CMakeLists.txt
@@ -76,15 +76,15 @@ install(TARGETS
 
 install(DIRECTORY include/ DESTINATION include/)
 
-if(BUILD_TESTING)
-  find_package(ament_lint_auto REQUIRED)
-  ament_lint_auto_find_test_dependencies()
+# if(BUILD_TESTING)
+#   find_package(ament_lint_auto REQUIRED)
+#   ament_lint_auto_find_test_dependencies()
 
-  find_package(ament_cmake_gtest REQUIRED)
-  find_package(ament_cmake_pytest REQUIRED)
+#   find_package(ament_cmake_gtest REQUIRED)
+#   find_package(ament_cmake_pytest REQUIRED)
 
-  add_subdirectory(test)
-endif()
+#   add_subdirectory(test)
+# endif()
 
 ament_export_include_directories(include)
 ament_export_libraries(${library_name})
diff --git a/nav2_lifecycle_manager/src/lifecycle_manager.cpp b/nav2_lifecycle_manager/src/lifecycle_manager.cpp
index 8474969f..60d64740 100644
--- a/nav2_lifecycle_manager/src/lifecycle_manager.cpp
+++ b/nav2_lifecycle_manager/src/lifecycle_manager.cpp
@@ -38,7 +38,7 @@ LifecycleManager::LifecycleManager(const rclcpp::NodeOptions & options)
 
   // The list of names is parameterized, allowing this module to be used with a different set
   // of nodes
-  declare_parameter("node_names", rclcpp::PARAMETER_STRING_ARRAY);
+  declare_parameter("node_names");
   declare_parameter("autostart", rclcpp::ParameterValue(false));
   declare_parameter("bond_timeout", 4.0);
 
@@ -49,7 +49,7 @@ LifecycleManager::LifecycleManager(const rclcpp::NodeOptions & options)
   bond_timeout_ = std::chrono::duration_cast<std::chrono::milliseconds>(
     std::chrono::duration<double>(bond_timeout_s));
 
-  callback_group_ = create_callback_group(rclcpp::CallbackGroupType::MutuallyExclusive, false);
+  callback_group_ = create_callback_group(rclcpp::CallbackGroupType::MutuallyExclusive);
   manager_srv_ = create_service<ManageLifecycleNodes>(
     get_name() + std::string("/manage_nodes"),
     std::bind(&LifecycleManager::managerCallback, this, _1, _2, _3),
@@ -92,7 +92,7 @@ LifecycleManager::LifecycleManager(const rclcpp::NodeOptions & options)
       }
     });
   auto executor = std::make_shared<rclcpp::executors::SingleThreadedExecutor>();
-  executor->add_callback_group(callback_group_, get_node_base_interface());
+  // executor->add_callback_group(callback_group_, get_node_base_interface());
   service_thread_ = std::make_unique<nav2_util::NodeThread>(executor);
 }
 
@@ -170,7 +170,7 @@ LifecycleManager::createBondConnection(const std::string & node_name)
     bond_map_[node_name]->start();
     if (
       !bond_map_[node_name]->waitUntilFormed(
-        rclcpp::Duration(rclcpp::Duration::from_nanoseconds(timeout_ns / 2))))
+        rclcpp::Duration(timeout_s)))
     {
       RCLCPP_ERROR(
         get_logger(),
@@ -189,19 +189,22 @@ bool
 LifecycleManager::changeStateForNode(const std::string & node_name, std::uint8_t transition)
 {
   message(transition_label_map_[transition] + node_name);
-
+  RCLCPP_ERROR(get_logger(), "!!!!!!!!!!!!!!!!!!!!! Starting transition !!!!!!!!!!!!!!!!!!!!!");
   if (!node_map_[node_name]->change_state(transition) ||
     !(node_map_[node_name]->get_state() == transition_state_map_[transition]))
   {
     RCLCPP_ERROR(get_logger(), "Failed to change state for node: %s", node_name.c_str());
     return false;
   }
+  RCLCPP_ERROR(get_logger(), "!!!!!!!!!!!!!!!!!!!!! FINISHED TRANSITION !!!!!!!!!!!!!!!!!!!!!");
 
   if (transition == Transition::TRANSITION_ACTIVATE) {
     return createBondConnection(node_name);
   } else if (transition == Transition::TRANSITION_DEACTIVATE) {
     bond_map_.erase(node_name);
   }
+  
+  RCLCPP_ERROR(get_logger(), "!!!!!!!!!!!!!!!!!!!!! Node returning now !!!!!!!!!!!!!!!!!!!!!");
 
   return true;
 }
diff --git a/nav2_lifecycle_manager/src/lifecycle_manager_client.cpp b/nav2_lifecycle_manager/src/lifecycle_manager_client.cpp
index 632eb1aa..44f6f442 100644
--- a/nav2_lifecycle_manager/src/lifecycle_manager_client.cpp
+++ b/nav2_lifecycle_manager/src/lifecycle_manager_client.cpp
@@ -19,7 +19,7 @@
 #include <string>
 #include <utility>
 
-#include "tf2_geometry_msgs/tf2_geometry_msgs.hpp"
+#include "tf2_geometry_msgs/tf2_geometry_msgs.h"
 #include "nav2_util/geometry_utils.hpp"
 
 namespace nav2_lifecycle_manager
